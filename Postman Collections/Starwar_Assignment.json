{
  "info": {
    "_postman_id": "f1825656-a82d-4d97-808b-4ee5319d29d4",
    "name": "Starwar Assignment",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "2803a8cd-c139-4d95-9ca0-c8d2047540ce",
      "name": "Requset to retrieve list of  Starwar characters",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ff461b28-cdc9-47d8-8ebf-80858f72e237",
            "exec": [
              "",
              "// Test to verify request is success",
              "",
              "pm.test(\"Request to get list of Starwar characters is success\", function () {",
              "    pm.response.to.have.status(200);",
              "    let jsonData = pm.response.json();",
              "     console.log (\"Response contains list of \"+ jsonData.count + \" characters\");",
              "});",
              "",
              "let jsonData = pm.response.json();",
              "",
              "// Test verifies the number of characters in list",
              "pm.test(\"List contains\"+ jsonData.count+\"characters\", function () {",
              "    ",
              "    console.log(jsonData.count)",
              "    pm.expect(jsonData.count).is.equal(data.charactercount);",
              "    ",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "{{url}}people/",
        "description": "This test request has to retrieve all the Starwar characters\nGet request used -> Root:   https://swapi.co/api\n                    End point:/people/\nTest request should get success response \nThe response should contain complete list of Starwar characters."
      },
      "response": []
    },
    {
      "_postman_id": "b54dfc11-3e81-495a-ad8f-4b99cb9ec2a6",
      "name": "Request to retrieve details of a specific Starwar character",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "e40bddf3-9466-4359-9c99-c28676ce28a1",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "1650e3ae-5f44-4f5f-81ad-14f13df00fb0",
            "exec": [
              "pm.test(\"Request to get details of specific Starwar characters is success\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "{{url}}people/{{characterid}}",
        "description": "This request will retrieve the details of the characters given in Data.csv file"
      },
      "response": []
    },
    {
      "_postman_id": "3fc5a3c7-d20b-4006-b60f-364801da8a33",
      "name": "List of Starwar Planets",
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "{{url}}planets/"
      },
      "response": []
    },
    {
      "_postman_id": "37766b6d-b9c9-4806-8a15-f63857f860d4",
      "name": "Details of Planets",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7aa6d88e-bb32-480c-b02e-6955acbf937c",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "{{url}}planets/{{planetid}}"
      },
      "response": []
    },
    {
      "_postman_id": "67b44c87-2663-4427-abc7-98e8b5040225",
      "name": "Search for specific Character",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "0e3ec5b2-189c-4f6d-9c4e-9f2845d96996",
            "exec": [
              "pm.test(\"Request for search a character is success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "let jsonData = pm.response.json();",
              "",
              "pm.test(\"Single character details returned\", function () {",
              "    pm.expect(jsonData.count).to.eql(1);",
              "    ",
              "});",
              "",
              "pm.test(\"Name of the character is Quarsh Panaka\", function () {",
              "    ",
              "    pm.expect(jsonData.results[0].name)===data.charactername;",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{url}}people/?search={{charactername}}",
          "host": [
            "{{url}}people"
          ],
          "path": [
            ""
          ],
          "query": [
            {
              "key": "search",
              "value": "{{charactername}}",
              "equals": true
            }
          ]
        }
      },
      "response": []
    },
    {
      "_postman_id": "92da19c9-cdba-4f5c-83e3-b2a4c0d17a48",
      "name": "Search for specific Planet",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "a50b8144-ab96-4f90-88d3-ca8cc86b3008",
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "3acdf7ab-921f-4d3b-9882-98421890c9a9",
            "exec": [
              "",
              "pm.test(\"Request for search a planet is success\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "let jsonData = pm.response.json();",
              "",
              "pm.test(\"Single planet details returned\", function () {",
              "    pm.expect(jsonData.count).to.eql(1);",
              "    ",
              "});",
              "",
              "",
              "pm.test(\"Name of the planet is \" + data[\"planetname\"], function () {",
              "    console.log(data[\"planetname\"]);",
              "    ",
              "    pm.expect(jsonData.results[0].name)===data.planetname;",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{url}}planets/?search={{planetname}}",
          "host": [
            "{{url}}planets"
          ],
          "path": [
            ""
          ],
          "query": [
            {
              "key": "search",
              "value": "{{planetname}}",
              "equals": true
            }
          ]
        },
        "description": "This request searches for the details of a specific Starwar Planet.\n\nThe result should contain the details of requested Planet \n\nTest verifies that the name of the planet is same as that of the requested\n\n\n\n"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "dffdceed-4f13-4aef-8636-64b5a8f93be4",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "52c5d89f-9bc7-4c55-a927-3ccf9379a4e5",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "16031ccd-6239-4b64-8354-c9bdc734a2b9",
      "key": "url",
      "value": "",
      "type": "string",
      "description": ""
    }
  ]
}